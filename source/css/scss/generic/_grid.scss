/*------------------------------------*\
    SUSY GRID
\*------------------------------------*/

$susy: (
  columns: 12,  // The number of columns in your grid
  gutters: 1/3, // The size of a gutter in relation to a single column
  gutter-position: inside
);
/*------------------------------------*\
IN USING THIS GRID 'TOOLKIT', the goal is to keep the HTML as semantic as possible, and use the Susy SASS mixins to do all the 'gridding'. The following name classes are just examples of what can be done (this CSS styles the 'gallery.mustache' file), but in the demo I've used easy to understand English class names to describe the concept. The grid map above ($susy) is the default grid, but can be adjusted on the fly by the Susy functions and mixins (http://susydocs.oddbird.net/en/latest/). 
\*------------------------------------*/

.container {
  @include container;
}

.one.column {
  @include break();
  > .column {
    @include span(12);
  }
}

.two.columns {
  @include break();
  > .column {
    @include span(6 of 12); // 12/2 = 6; hence six of twelve
  }
}

.three.columns {
  @include break();
  > .column {
    @include span(4 of 12); 
  }
}

.four.columns {
  @include break();
  > .column {
    @include span(3); // if the number of columns is defined in the $susy map, you don't even have to include "_ of 12"
  }
}

.five.columns {
  @include break();
  > .column {
    @include span(2.4); // 12 divided by 5 = 2.4, so you get five columns
  }
}

.gallery > .column {
  @include gallery(6 of 12);
  @include breakpoint($bp-med) {
    @include gallery(4 of 12);
  }
  @include breakpoint($bp-large) {
    @include gallery(3 of 12);
  }
}

.demo > .column {
  background: $wf-gray-light;
  border: 1px solid $wf-gray-med;
  min-height: 50px;
  &:nth-of-type(2n) {
    background: $wf-gray-med;
    border-color: $wf-gray-dark;
  }
}